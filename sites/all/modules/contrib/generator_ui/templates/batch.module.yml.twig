<?php
/**
 * @file
 * Contains {{ module_name }}.module.
 */

/**
 *
 * @param $nid
 * @param $context
 */
function batch_example_progress($nid, &$context) {
  //Load all nid.
  $node = \Drupal\node\Entity\Node::load($nid);
  //Save all nids to $context['results'].( 'results'  is the  array of results gathered so far by the batch processing).
  $context['results'][] = $nid;
  //Save the title of the node to display it in the progress page.
  $context['message'] = \Drupal\Component\Utility\SafeMarkup::checkPlain($node->getTitle());
}

/**
 *
 * @param $success
 * @param $results
 * @param $operations
 */
function batch_example_finished($success, $results, $operations) {
  //If the batch is run successfully.
  if ($success) {
    //Initialise the number of the node published.
    $published = 0;
    //Initialise the number of the node published.
    $unpublished = 0;
    foreach ($results as $nid) {
      if (\Drupal\node\Entity\Node::load($nid)->isPublished() == 0) {
        $published++;
        // If the node is unpublished, publish it.
        \Drupal\node\Entity\Node::load($nid)->setPublished(TRUE)->save();
      }
      else {
        $unpublished++;
        // If the node is published, unpublished it.
        \Drupal\node\Entity\Node::load($nid)->setPublished(FALSE)->save();
      }
    }
    // Message rendered if the batch run successfully.
    $message = \Drupal::translation()
      ->formatPlural(count($results), 'One node published.', 'You have @count nodes. You published <b style="color: #ff0000">@published nodes</b> and you unpublished <b style="color: #004000"> @unpublished nodes </b>.', array('@published'=> $published, '@unpublished'=> $unpublished));
    // \Drupal\node\Entity\Node::load(1)->setPublished(TRUE);
  }
  else {
    // Message rendered if the batch run with errors.
    $message = t('Finished with an error.');
  }
  drupal_set_message($message);
}
