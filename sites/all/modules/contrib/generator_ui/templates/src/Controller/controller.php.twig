<?php

/**
 * @file
 * Contains \Drupal\{{ module_name }}\Controller\{{ controller }}.
 */

namespace Drupal\{{ module_name }}\Controller;

use Drupal\Core\Controller\ControllerBase;
use Symfony\Component\HttpFoundation\JsonResponse;
use Drupal\Core\Access\AccessResult;
use Symfony\Component\DependencyInjection\ContainerInterface;

{% for container in containers if containers and containers|length>0 %}
use {{ container['class'].getName }};
{% endfor %}


class {{ controller }} extends ControllerBase {

{% for container in containers if containers and containers|length>0 %}

  /**
   * {{ container['class'].getName }} definition.
   *
   * @var {{ container['class'].getName }}
   */
    protected ${{ container['name'] }};
{% endfor %}

{% if containers and containers|length>0 %}
  /**
   * {@inheritdoc}
   */
  public function __construct({% for container in containers if containers and containers|length>0 %}{{ container['class'].getShortName }} ${{ container['name'] }}{% if loop.index< containers|length %}, {% endif %}{% endfor %}) {

    {% for container in containers if containers and containers|length>0 %}
        $this->{{ container['name'] }} = ${{ container['name'] }};
    {% endfor %}
}
{% endif %}

{% if containers and containers|length>0 %}
public static function create(ContainerInterface $container) {
    return new static(
{% for container in containers if containers and containers|length>0 %}
        $container->get('{{ container['service'] }}'){% if loop.index< containers|length %},{% endif %}

{% endfor %}
    );
}
{% endif %}

{% if choice_watchdog == "watchdog" %}
   public function exampleLogger(){
     //current user
     $user = \Drupal::currentUser();
    \Drupal::logger('module_test')->notice('Hi %user', array('%user' => $user->getUsername()));
     return array('#markup' => $this->t('You can check your recent log messages ! '));
   }
{% endif %}
{% if method_custom_permission and custom_permission and controller %}
  public function {{ method_custom_permission }}(){
    //The current user
    $account = \Drupal::currentUser();
    if ($account->hasPermission('{{ custom_permission }}')) {
      return AccessResult::allowed();
    }else{
      return AccessResult::forbidden();
    }
  }
{% endif %}
{% if method != '' %}
  public function {{ method }}({{ argums|replace({'{': '$','}': '','/': ','}) }}) {
{% if method_return_type == 'html' %}
    $output = array(
      '#markup' => t('Hello World !! '),
    );
    return $output;
{% elseif method_return_type == 'json' %}
    $examples = array('hello', 'world');
    return new JsonResponse($examples);

{% endif %}
  }

{% endif %}

}