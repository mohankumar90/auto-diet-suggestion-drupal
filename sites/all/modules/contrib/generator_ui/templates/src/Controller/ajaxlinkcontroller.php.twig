<?php

/**
 * @file
 * Contains \Drupal\{{ module_name }}\Controller\{{ controller }}.
 */

namespace Drupal\{{ module_name }}\Controller;

use Drupal\Core\Controller\ControllerBase;
use Drupal\Core\Url;
{% if choice == "message" %}
use Drupal\Core\Ajax\AjaxResponse;
use Drupal\Core\Ajax\AfterCommand;
use Drupal\Core\Ajax\RemoveCommand;
use Drupal\node\Entity\Node;
{% endif %}

class {{ controller }} extends ControllerBase {
{% if choice == "modal" or choice == "dialog" %}
  /**
   * Returns a render array of form elements and links for dialog.
   */
  public function ajaxLink() {
{% if help %}
    // Add two wrapper elements for testing non-modal dialogs. Modal dialogs use
    // the global drupal-modal wrapper by default.
{% endif %}
    $build['dialog_wrappers'] = array('#markup' => '<div id="{{ module_name }}-dialog-wrapper-1"></div><div id="{{ module_name }}-dialog-wrapper-2"></div>');
{% if help %}
    // Dialog behavior applied to links rendered by links.html.twig.
 {% endif %}
    $build['links'] = array(
      '#theme' => 'links',
      '#links' => array(
        'link6' => array(
          'title' => 'Example link',
          'url' => Url::fromRoute('contact.form_add'),
          'attributes' => array(
            'class' => array('use-ajax'),
            'data-dialog-type' => '{{ choice }}',
            'data-dialog-options' => json_encode(array(
              'width' => 800,
              'height' => 500,
            ))
          ),
        ),
      ),
    );
    return $build;
  }
{% else %}
  // Change the status of the node : published or unpublished
  public function changeStatusContent($nid) {
    $node = Node::load($nid);
    // or you can use node_lod but this method will be deprecated
    $publish = $node->isPublished();
    if ($publish) {
      $node->setPublished(FALSE);
      $node->save();
      drupal_set_message(t('The node ' . $nid . ' is not published'));
    }
    else {
      $node->setPublished(TRUE);
      $node->save();
      drupal_set_message(t('The node ' . $nid . ' is published'));

    }
    $response = new AjaxResponse();
    $status_messages = array('#type' => 'status_messages');
    $response->addCommand(new RemoveCommand(".messages"));
    $data = $response->addCommand(new AfterCommand('.link6', \Drupal::service('renderer')
      ->renderRoot($status_messages)));
    return $data;
  }

  /**
   * Returns a render array of form elements and links for message when the link in published or unpublished.
   */
  public function ajaxLink($nid) {
    $build['links'] = array(
      '#theme' => 'links',
      '#links' => array(
        'link6' => array(
          'title' => 'Published/Unpublished node :' . $nid,
          'url' => Url::fromRoute('{{ module_name }}.change_status', ['nid' => $nid]),
          'html' => TRUE,
          'attributes' => array(
            'class' => array('use-ajax'),
          ),
        ),
      ),
    );
    return $build;
  }
{% endif %}
}